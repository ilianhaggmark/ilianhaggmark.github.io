# -*- coding: utf-8 -*-
"""
Created on Fri Apr 28 15:22:22 2023

@author: SasakiLab2022
"""
from math import cos,sin,pi
def coordX(lat,long):
    x = 131.579*( cos( lat*pi/180 )*sin( (long-10)*pi/180 ) ) * ( ((1 + sin( lat*pi/180 )*sin( 52*pi/180 ) + cos( lat*pi/180 )*cos( 52*pi/180 )*cos( (long-10)*pi/180 ) ) *0.5)**(-0.5)) - (-36.388)
    return 1401.34/100*x  

def coordY(lat,long):
     y = 55.11 - 153.610*( cos( 52* pi/180)*sin( lat*pi/180 ) - sin( 52*pi/180 )*cos( lat*pi/180 )*cos( (long-10)*pi/180 ) ) * ( ((1 + sin( lat*pi/180 )*sin( 52*pi/180 ) + cos( lat*pi/180 )*cos( 52*pi/180 )*cos( (long-10)*pi/180 ) ) *0.5)**(-0.5) ) 
     return 1198.34/100*y

typeOfLocation = ['stad','natur','done']

places = [
          (52.37823523366199, 4.899694031167702, 'Amsterdam',1,2024,1),
          (41.38705164567966, 2.1700239655931566, 'Barcelona',1,2024,1),
          (47.54807451854887, 7.590101595763656, 'Basel',1,2024,1),
          (60.39719222069556, 25.657817567307486, 'Borgå',1,2017,1),
          (53.075737090640736, 8.807209919618241, 'Bremen',1,2024,1),
          (51.01926351452187, 11.247146892393381, 'Buchenwald',1,2006,1),
          (50.07930622148221, 12.370413845971875, 'Cheb',1,2006,1),
          (46.847801327431256, 9.534849822523269, 'Chur',1,2024,1),
          (40.207564414345036, -8.426063548035442, 'Coimbra',1,2019,1),
          (48.07759384768118, 7.358315165923751, 'Colmar',1,2012,1),
          (55.95214237143012, -3.1894732139563757, 'Edinburgh',1,2008,1),
          (50.722625479454614, -3.531019442488411, 'Exeter',1,2008,1),
          (52.34404488808747, 14.553695094545983, 'Frankfurt an der Oder',1,2008,1),
          (47.99501101240735, 7.845908282190736, 'Freiburg',1,2017,1),
          (47.491546517552436, 11.097714301731282, 'Garmisch-Partenkirchen',1,2017,1),
          (54.3, 18.6, 'Gdansk',1,2012,1),
          (51.53273179419116, 9.935170391044482, 'Göttingen',1,2021,1),
          (53.541349737286296, 9.983969276081854, 'Hamburg',1,2021,1),
          (49.41058215719387, 8.713826599266117, 'Heidelberg',1,2012,1),
          (60.167643778206276, 24.9547394205438, 'Helsingfors',1,2017,1),
          (47.268644075142234, 11.395245153985323, 'Innsbruck',1,2018,1),
          (57.479777656920916, -4.2235523891330455, 'Inverness',1,2008,1),
          (58.981428472136436, -2.959583638104359, 'Kirkwall',1,2008,1),
          (57.28095479274263, -5.714081948334984, 'Kyle of Lochals',1,2008,1),
          (55.67289743059276, 12.56454192954339, 'Köpenhamn',1,0,1),
          (52.15892973983758, 4.492407476488736, 'Leiden',1,2024,1),
          (47.54428530271789, 9.68306235011491, 'Lindau',1,2009,1),
          (38.70752537390125, -9.136461622825239, 'Lisabon',1,2008,1),
          (51.505577565911686, -0.0753581160468468, 'London',1,1994,1),
          (47.70520994075866, 9.195788598080135, 'Mainau',2,2009,1),
          (48.150626763558954, 11.581320412611714, 'München',1,2009,1),
          (68.43834526566727, 17.42736151587648, 'Narvik',1,2012,1),
          (47.557576184793334, 10.7497584656342, 'Neuschwanstein',2,2009,1),
          (59.907280685246, 10.736298874581735, 'Oslo',1,2004,1),
          (51.75321138618212, -1.2538833871189508, 'Oxford',1,2016,1),
          (48.85304738941788, 2.3461038243855743, 'Paris',1,2018,1),
          (46.9795512555873, 8.255654299133129, 'Pilatus',2,2017,1),
          (50.08647787530532, 14.41154120346314, 'Prag',1,2006,1),
          (47.67669446664823, 8.616902847513817, 'Rheinfall',2,2024,1),
          (56.947469916352475, 24.10842234079926, 'Riga',1,2017,1),
          (41.910671555843756, 12.476448718734693, 'Rom',1,2017,1),
          (48.58164999788526, 7.750228981132381, 'Strasbourg',1,2012,1),
          (59.43706252848692, 24.73973509209279, 'Tallin',1,2016,1),
          (46.21580781847993, 10.167074739237753, 'Tirano',1,2024,1),
          (62.00957099405131, -6.771811029672605, 'Torshavn',1,2018,1),
          (47.13692573193349, 9.522446900549747, 'Vaduz',1,2024,1),
          (54.48491925311646, -0.6152603611521444, 'Whitby',1,2008,1),
          (58.44160005359427, -3.093983492204976, 'Wick',1,2008,1),
          (48.2081614833843, 16.371743669214133, 'Wien',1,2015,1),
          (53.96224978192508, -1.082078914541599, 'York',1,2008,1),
          (46.60330103187466, 9.957929446872177, 'Zuoz',1,2024,1),
          (47.37619645210239, 8.546878897122808, 'Zürich',1,2017,1)        
          ]


for i in range(len(places)):
    if type(places[i][4]) is tuple:
        temp = ''
        for j in places[i][4]:
            temp += 'y' + str(j) + ' '
        print('<circle id=\'loc{}\' class=\'loc {} {}t{}\' r=\'5\' cx=\'{}\' cy=\'{}\'><title>{}</title></circle>'
             .format(i,typeOfLocation[places[i][3]-1],temp,places[i][5],coordX(places[i][0],places[i][1]),coordY(places[i][0],places[i][1]),places[i][2]))
        continue
    print('<circle id=\'loc{}\' class=\'loc {} y{} t{}\' r=\'5\' cx=\'{}\' cy=\'{}\'><title>{}</title></circle>'
          .format(i,typeOfLocation[places[i][3]-1],places[i][4],places[i][5],coordX(places[i][0],places[i][1]),coordY(places[i][0],places[i][1]),places[i][2]))
    
